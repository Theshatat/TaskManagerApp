@model IEnumerable<TaskManagerApp.Models.TaskItem>

@{
    ViewData["Title"] = "Index";
}

<h1>All Tasks</h1>

<p>
    <a asp-action="Create">Create New Task</a>
</p>

<div class="card mb-4">
    <div class="card-header">
        <h5>Filter Tasks</h5>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get">
            <div class="row mb-3">
                <div class="col-md-3">
                    <label>Status</label>
                    @Html.DropDownList("status", (IEnumerable<SelectListItem>)ViewBag.StatusOptions, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label>Keyword</label>
                    <input type="text" name="searchString" value="@ViewBag.CurrentSearch" class="form-control" placeholder="Search title/description" />
                </div>
                <div class="mb-3">
                    <label for="categoryFilter">Filter by Category:</label>
                    @{
                        var list = ViewBag.Categories as SelectList;
                    }

                    @if (list != null)
                    {
                        <select id="categoryFilter" name="categoryId" class="form-select">
                            <option value="">-- All Categories --</option>
                            @foreach (var item in list)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    }
                    else
                    {
                        <p class="text-danger">Categories could not be loaded.</p>
                    }

                </div>
                <div class="col-md-3">
                    <label>Due Between</label>
                    <div class="input-group">
                        <input type="date" name="dueDateStart" value="@ViewBag.CurrentStartDate" class="form-control" />
                        <span class="input-group-text">and</span>
                        <input type="date" name="dueDateEnd" value="@ViewBag.CurrentEndDate" class="form-control" />
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </form>
    </div>
</div>

<div id="task-container">
    @Html.Partial("_TaskListPartial", Model)
</div>

                        @section Scripts {
                            <script>
                                function fetchFilteredTasks() {
                                    var formData = $("form").serialize();
                                    $.get("/TaskItems/Index", formData, function (data) {
                                        var html = $(data).find("#task-container").html();
                                        $("#task-container").html(html);
                                    });
                                }

                                // Trigger AJAX when category or status dropdown changes
                                $("#categoryFilter, select[name='status']").change(function () {
                                    fetchFilteredTasks();
                                });

                                // Trigger on keyword typing or date changes
                                $("input[name='searchString'], input[name='dueDateStart'], input[name='dueDateEnd']").on("input change", function () {
                                    fetchFilteredTasks();
                                });

                                // Trigger on form submit (Apply Filters)
                                $("form").on("submit", function (e) {
                                    e.preventDefault();
                                    fetchFilteredTasks();
                                });
                            </script>
                        }

@* 
    // This script handles the AJAX request same as the previous one, but it is now in $.ajax format.
<script>
    function fetchFilteredTasks() {
        var formData = $("form").serialize();

        $.ajax({
            url: "/TaskItems/Index",
            type: "GET",
            data: formData,
            success: function (data) {
                var html = $(data).find("#task-container").html();
                $("#task-container").html(html);
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                alert("An error occurred while fetching tasks.");
            }
        });
    }

    // Trigger AJAX when category or status dropdown changes
    $("#categoryFilter, select[name='status']").change(function () {
        fetchFilteredTasks();
    });

    // Trigger on keyword typing or date changes
    $("input[name='searchString'], input[name='dueDateStart'], input[name='dueDateEnd']").on("input change", function () {
        fetchFilteredTasks();
    });

    // Trigger on form submit (Apply Filters)
    $("form").on("submit", function (e) {
        e.preventDefault();
        fetchFilteredTasks();
    });
</script> *@